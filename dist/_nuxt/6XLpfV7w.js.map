{"version":3,"file":"6XLpfV7w.js","sources":["../../../../data/references.ts","../../../../pages/index.vue"],"sourcesContent":["// Define the Reference interface\nexport interface Reference {\n  // Unique identifier for the reference\n  id: number;\n\n  // Health Provision History number\n  hph: string;\n\n  // Full name of the patient\n  patientName: string;\n\n  // Personal Identification Number of the patient\n  patientPid: string;\n\n  // Date the reference was issued\n  issuedDate: string;\n\n  // Unique ID of the reference document\n  referenceId: string;\n\n  // Type of reference (e.g., medical procedure type)\n  referenceType: number;\n\n  // Primary location where the reference is valid\n  primaryLocation: string;\n\n  // Code for the primary location\n  primaryLocationCode: number;\n\n  // Secondary location associated with the reference\n  secondaryLocation: string;\n\n  // Code for the secondary location\n  secondaryLocationCode: number;\n\n  // Patient's current state (e.g., hospital, clinic code)\n  patientStateCode: string;\n\n  // Name of the referring doctor\n  referringDoctor: string;\n\n  // Unique identifier for the referring doctor\n  doctorId: number;\n\n  // Code representing the patient's condition\n  conditionCode: string;\n\n  // Description of the patient's condition\n  conditionDescription: string;\n\n  // Regional Health Inspectorate code\n  regionalHealthCode: string;\n\n  // Executor of the reference (e.g., laboratory, doctor)\n  executorName: string;\n\n  // Date the material for the examination was collected\n  materialCollectionDate: string;\n\n  // Date when the results were ready\n  resultDate: string;\n}\n\n// Define the mock references array\nexport const mockReferences: Reference[] = [\n  {\n    id: 1,\n    hph: \"123456789012\",\n    patientName: \"Иван Стойков Иванов\",\n    patientPid: \"1234567890\",\n    issuedDate: \"2025-04-09\",\n    referenceId: \"25099A0000F6\",\n    referenceType: 1,\n    primaryLocation: \"Пловдив\",\n    primaryLocationCode: 16,\n    secondaryLocation: \"Съединение\",\n    secondaryLocationCode: 15,\n    patientStateCode: \"ZOO\",\n    referringDoctor: \"Тодор Николов\",\n    doctorId: 1700003565,\n    conditionCode: \"06\",\n    conditionDescription: \"Вътрешни болести\",\n    regionalHealthCode: \"1622111277\",\n    executorName: \"Д-р Иванов\",\n    materialCollectionDate: \"2025-04-08\",\n    resultDate: \"2025-04-10\",\n  },\n  {\n    id: 2,\n    hph: \"123456789012\",\n    patientName: \"Иван Стойков Иванов\",\n    patientPid: \"1234567890\",\n    issuedDate: \"2025-04-10\",\n    referenceId: \"35088B0000F7\",\n    referenceType: 2,\n    primaryLocation: \"София\",\n    primaryLocationCode: 18,\n    secondaryLocation: \"Враждебна\",\n    secondaryLocationCode: 17,\n    patientStateCode: \"XYZ\",\n    referringDoctor: \"Д-р Анна Иванова\",\n    doctorId: 1700007890,\n    conditionCode: \"07\",\n    conditionDescription: \"Неврология\",\n    regionalHealthCode: \"1633112288\",\n    executorName: \"Д-р Петрова\",\n    materialCollectionDate: \"2025-04-09\",\n    resultDate: \"2025-04-12\",\n  },\n];\n","<script setup lang=\"ts\">\n//\n// Imports\n//\nimport { useDisplay } from \"vuetify\";\nimport { mockReferences, type Reference } from \"@/data/references\";\n\n//\n// State\n//\n\n// Screen size utility from Vuetify\nconst { smAndDown } = useDisplay();\n\n// Reactive form state\nconst form = reactive({\n  pid: null as number | null,\n  hph: null as string | null,\n  location: null as string | null,\n  saleSchema: null as string | null,\n});\n\n// Boolean switch for identifier type (true = PID, false = HPH)\nconst identifierType = ref<boolean>(true);\n\n// Form reference for validation\nconst formRef = ref();\n\n// Loading state for asynchronous operations\nconst isLoading = ref(false);\n\n// References data\nconst references = ref<Reference[]>([]);\n\n// Selected references by the user\nconst selectedReferences = ref<Array<string | number>>([]);\n\n// Location options\nconst locationItems = [\n  \"Асеновград\",\n  \"Търново\",\n  \"София\",\n  \"Пловдив\",\n  \"Плевен\",\n  \"Хасково\",\n];\n\n// Sale schema options\nconst saleSchemaItems = [\"НЗОК - Асеновград\", \"НЗОК - Пловдив\", \"НЗОК - София\"];\n\n// Performer select options\nconst performerSelectItems = [\n  { name: \"Д-р Иванов\", department: \"Кардиология\" },\n  { name: \"Д-р Петрова\", department: \"Неврология\" },\n  { name: \"Д-р Георгиев\", department: \"Ортопедия\" },\n  { name: \"Д-р Стефанова\", department: \"Педиатрия\" },\n  { name: \"Д-р Николов\", department: \"Офталмология\" },\n  { name: \"Д-р Димитрова\", department: \"Хирургия\" },\n];\n\n// Examination table data\nconst examinationTableHeaders = [\n  { key: \"code\", title: \"Код\", align: \"start\" as \"start\" },\n  { key: \"examinationName\", title: \"Изследване\", align: \"start\" as \"start\" },\n];\nconst examinationTableItems = [\n  { code: \"00-02A\", examinationName: \"Изследване на витамин D\" },\n];\n\n//\n// Computed Properties\n//\n\n// Check if any references are selected\nconst hasSelectedReferences = computed(\n  () => selectedReferences.value.length > 0\n);\n\n// PID/HPH input character counter\nconst counter = computed(() => form.pid?.toString().length || 0);\n\n//\n// Methods\n//\n\n/**\n * Validation rule for PID input.\n */\nconst pidValidationRule = (value: string) => {\n  const regex = /^\\d{10}$/;\n  if (!value) {\n    return \"ЕГН/ЛНЧ не може да бъде празно\";\n  } else if (!regex.test(value)) {\n    return \"ЕГН/ЛНЧ трябва да съдържа точно 10 цифри\";\n  }\n  return true;\n};\n\n/**\n * Validation rule for HPH input.\n */\nconst hphValidationRule = (value: string) => {\n  // Ensure exactly 12 characters: numbers or Cyrillic letters\n  const regex = /^[0-9А-Яа-я]{12}$/;\n\n  if (!value) {\n    return \"HPH не може да бъде празно\";\n  } else if (!regex.test(value)) {\n    return \"HPH трябва да съдържа точно 12 символа (цифри и/или букви на кирилица)\";\n  }\n  return true;\n};\n\n/**\n * Format a date string to a localized format.\n */\nconst formatIssuedDate = (dateString: string): string => {\n  const months = [\n    \"яну\",\n    \"фев\",\n    \"мар\",\n    \"апр\",\n    \"май\",\n    \"юни\",\n    \"юли\",\n    \"авг\",\n    \"сеп\",\n    \"окт\",\n    \"ное\",\n    \"дек\",\n  ];\n  const date = new Date(dateString);\n  return `${date.getDate().toString().padStart(2, \"0\")} ${\n    months[date.getMonth()]\n  } ${date.getFullYear()}г.`;\n};\n\n/**\n * Validate the form based on the identifier type.\n */\nconst validateForm = () => {\n  const value = identifierType.value\n    ? pidValidationRule(form.pid?.toString() || \"\")\n    : hphValidationRule(form.hph?.toString() || \"\");\n  return value === true;\n};\n\n/**\n * Fetch mock references (simulate an API call).\n */\nconst fetchMockReferences = async (): Promise<Reference[]> => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(mockReferences), 1000);\n  });\n};\n\n// Clear all references\nconst clearAllReferences = () => {\n  references.value = [];\n};\n\n// Remove a reference from the list\nconst removeReference = (reference: Reference) => {\n  references.value = references.value.filter((ref) => ref !== reference);\n};\n\n/**\n * Handle form submission.\n */\nconst handleSubmit = async () => {\n  if (validateForm()) {\n    isLoading.value = true;\n    references.value = await fetchMockReferences();\n    isLoading.value = false;\n\n    if (references.value.length === 0) {\n      console.log(\"No references found for the given identifier.\");\n    }\n  } else {\n    console.log(\"Form validation failed.\");\n  }\n};\n\n/**\n * Copy text to clipboard.\n */\nconst copyToClipboard = (text: string) => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => console.log(\"Text copied to clipboard\"))\n    .catch((error) => {\n      console.error(\"Failed to copy text:\", error);\n      alert(\"Unable to copy text.\");\n    });\n};\n\n/**\n * Map performer data to props for a select component.\n */\nconst performerSelectProps = (performer: {\n  name: string;\n  department: string;\n}): { title: string; subtitle: string } => {\n  return {\n    title: performer.name,\n    subtitle: performer.department,\n  };\n};\n\n//\n// Lifecycle Hooks\n//\n\n// Set default location to the first item in the list when the component is mounted\nonMounted(() => {\n  form.location = form.location || locationItems[0];\n  form.saleSchema = form.saleSchema || saleSchemaItems[0];\n});\n\n//\n// Metadata\n//\n\n// Set the page's head metadata\nuseHead({\n  title: \"НЗИС Import Application\",\n  htmlAttrs: { lang: \"bg\" },\n  meta: [\n    {\n      name: \"description\",\n      content: \"Приложение за импортиране на данни от НЗИС.\",\n    },\n    {\n      name: \"keywords\",\n      content: \"НЗИС, пациентски данни, реферали, импортиране\",\n    },\n    { name: \"author\", content: \"SKYWARE Group | LIMS iLab\" },\n    { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n  ],\n});\n</script>\n\n<template>\n  <v-container\n    max-width=\"1024\"\n    height=\"100%\"\n    class=\"w-100 mx-auto d-flex flex-column ga-4 px-4 py-8\"\n  >\n    <!-- Loading Overlay -->\n    <v-overlay\n      :model-value=\"isLoading\"\n      z-index=\"50\"\n      color=\"rgba(0, 0, 0, 0.5)\"\n      class=\"align-center justify-center\"\n    >\n      <v-progress-circular\n        indeterminate\n        color=\"white\"\n        size=\"50\"\n      ></v-progress-circular>\n    </v-overlay>\n\n    <!-- Actions -->\n    <div\n      class=\"d-flex flex-wrap flex-md-row flex-column-reverse align-start align-md-center justify-space-between ga-4\"\n    >\n      <!-- PID/HPH Switch -->\n      <div class=\"d-flex align-center ga-4\">\n        <span>Търсете направления по</span>\n        <v-switch\n          v-model=\"identifierType\"\n          :hide-details=\"true\"\n          color=\"primary\"\n          :label=\"identifierType ? 'ЕГН/ЛЧН' : 'HPH'\"\n        >\n          <template v-slot:label>\n            {{ identifierType ? \"ЕГН/ЛЧН\" : \"HPH\" }}\n          </template>\n        </v-switch>\n      </div>\n\n      <div class=\"d-flex align-center ga-4\">\n        <!-- Import -->\n        <v-btn\n          :disabled=\"!hasSelectedReferences\"\n          color=\"primary\"\n          rounded=\"lg\"\n          variant=\"outlined\"\n          prepend-icon=\"mdi-file-import-outline\"\n          class=\"d-flex\"\n          v-tooltip:bottom=\"{\n            text: 'Импортиране на маркираните направления',\n            openDelay: 700,\n          }\"\n        >\n          <span class=\"text-body-2\">Импорт</span>\n        </v-btn>\n\n        <!-- Print -->\n        <v-btn\n          :disabled=\"!hasSelectedReferences\"\n          color=\"\"\n          rounded=\"lg\"\n          variant=\"outlined\"\n          prepend-icon=\"mdi-printer-outline\"\n          class=\"d-flex\"\n          v-tooltip:bottom=\"{\n            text: 'Печатане на маркираните направления',\n            openDelay: 700,\n          }\"\n        >\n          <span class=\"text-body-2\">Печат</span>\n        </v-btn>\n\n        <!-- Clear All -->\n        <v-btn\n          color=\"error\"\n          rounded=\"lg\"\n          variant=\"outlined\"\n          prepend-icon=\"mdi-close\"\n          class=\"d-flex\"\n          v-tooltip:bottom=\"{\n            text: 'Изчистисване на всички направления',\n            openDelay: 700,\n          }\"\n          @click=\"clearAllReferences\"\n        >\n          <span class=\"text-body-2\">Изчисти</span>\n        </v-btn>\n      </div>\n    </div>\n\n    <!-- Form -->\n    <v-form ref=\"formRef\" @submit.prevent=\"handleSubmit\">\n      <v-row class=\"d-flex flex-wrap\" align=\"stretch\" justify=\"space-between\">\n        <!-- PID/HPH Inputs -->\n        <v-col cols=\"12\">\n          <!-- PID Input -->\n          <v-number-input\n            v-if=\"identifierType\"\n            v-model=\"form.pid\"\n            :value=\"form.pid\"\n            label=\"ЕГН/ЛЧН\"\n            control-variant=\"hidden\"\n            maxlength=\"10\"\n            variant=\"outlined\"\n            placeholder=\"5303266698\"\n            density=\"comfortable\"\n            rounded=\"lg\"\n            hint=\"Въведете валиден ЕГН/ЛНЧ (само цифри)\"\n            persistent-hint\n            :rules=\"[pidValidationRule]\"\n            :counter=\"counter\"\n            @keydown.enter=\"handleSubmit\"\n          >\n            <!-- Search Action -->\n            <template v-slot:append-inner>\n              <v-tooltip>\n                <template v-slot:activator=\"{ props }\">\n                  <v-icon\n                    class=\"cursor-pointer\"\n                    v-bind=\"props\"\n                    @click=\"handleSubmit\"\n                  >\n                    mdi-magnify\n                  </v-icon>\n                </template>\n\n                <!-- Tooltip -->\n                <span>Търсене</span>\n              </v-tooltip>\n            </template>\n          </v-number-input>\n\n          <!-- HPH Input -->\n          <v-text-field\n            v-else\n            v-model=\"form.hph\"\n            :value=\"form.hph\"\n            label=\"HPH\"\n            type=\"text\"\n            maxlength=\"12\"\n            variant=\"outlined\"\n            placeholder=\"5АГ30326ПВ98\"\n            density=\"comfortable\"\n            rounded=\"lg\"\n            hint=\"Въведете валиден HPH (цифри и/или букви на кирилица)\"\n            persistent-hint\n            :rules=\"[hphValidationRule]\"\n            :counter=\"counter\"\n            @keydown.enter=\"handleSubmit\"\n          >\n            <!-- Search Action -->\n            <template v-slot:append-inner>\n              <v-tooltip>\n                <template v-slot:activator=\"{ props }\">\n                  <v-icon\n                    class=\"cursor-pointer\"\n                    v-bind=\"props\"\n                    @click=\"handleSubmit\"\n                  >\n                    mdi-magnify\n                  </v-icon>\n                </template>\n\n                <!-- Tooltip -->\n                <span>Търсене</span>\n              </v-tooltip>\n            </template>\n          </v-text-field>\n        </v-col>\n\n        <!-- Sale Schema Select -->\n        <v-col cols=\"12\" md=\"6\">\n          <v-select\n            v-model=\"form.saleSchema\"\n            :value=\"form.saleSchema\"\n            :items=\"saleSchemaItems\"\n            prepend-inner-icon=\"mdi-currency-eur\"\n            label=\"Изберете схема на продажба\"\n            control-variant=\"hidden\"\n            maxlength=\"10\"\n            variant=\"outlined\"\n            placeholder=\"Схема на продажба\"\n            density=\"comfortable\"\n            rounded=\"lg\"\n            hint=\"Изберете схема на продажба от списъка.\"\n            persistent-hint\n          >\n          </v-select>\n        </v-col>\n\n        <!-- Location Select -->\n        <v-col cols=\"12\" md=\"6\">\n          <v-select\n            v-model=\"form.location\"\n            :value=\"form.location\"\n            :items=\"locationItems\"\n            prepend-inner-icon=\"mdi-map-marker-outline\"\n            label=\"Изберете местоположение\"\n            control-variant=\"hidden\"\n            maxlength=\"10\"\n            variant=\"outlined\"\n            placeholder=\"Местоположение\"\n            density=\"comfortable\"\n            rounded=\"lg\"\n            hint=\"Изберете местоположение от списъка.\"\n            persistent-hint\n          >\n          </v-select>\n        </v-col>\n      </v-row>\n    </v-form>\n\n    <!-- Divider -->\n    <v-divider class=\"my-6\"></v-divider>\n\n    <!-- References -->\n    <v-row\n      v-if=\"references.length > 0\"\n      align=\"stretch\"\n      justify=\"start\"\n      class=\"flex-0-1\"\n    >\n      <!-- Reference Card Section -->\n      <v-col\n        v-for=\"reference in references\"\n        :key=\"reference.id\"\n        cols=\"12\"\n        sm=\"6\"\n        style=\"height: fit-content\"\n      >\n        <!-- Card Container for each reference -->\n        <v-card class=\"bg-white\" rounded=\"lg\" flat border>\n          <!-- Card Header: Title Section -->\n          <v-card-title\n            class=\"d-flex bg-grey-lighten-5 justify-space-between align-center px-2 py-0\"\n          >\n            <!-- Checkbox to select the reference -->\n            <v-checkbox\n              :value=\"reference.id\"\n              v-model=\"selectedReferences\"\n              :hide-details=\"true\"\n              style=\"scale: 0.8\"\n              color=\"primary\"\n              tabindex=\"0\"\n              aria-label=\"Селектирайте направлението\"\n              v-tooltip:bottom=\"{\n                text: 'Селектирайте направлението',\n                openDelay: 700,\n              }\"\n            ></v-checkbox>\n\n            <!-- Section showing HPH (Health Patient ID) -->\n            <div class=\"d-flex align-center ga-1\">\n              <div class=\"text-subtitle-2\">\n                <b> HPH: {{ reference.hph }} </b>\n              </div>\n\n              <!-- Button to copy HPH to clipboard -->\n              <div class=\"relative d-flex align-center\">\n                <v-btn\n                  icon=\"mdi-content-copy\"\n                  size=\"x-small\"\n                  rounded=\"circle\"\n                  variant=\"text\"\n                  color=\"\"\n                  @click=\"copyToClipboard(reference.hph)\"\n                  tabindex=\"0\"\n                  aria-label=\"Кликнете, за да копирате в клипборда\"\n                  v-tooltip:bottom=\"{\n                    text: 'Кликнете, за да копирате в клипборда',\n                    openDelay: 700,\n                  }\"\n                >\n                </v-btn>\n              </div>\n            </div>\n\n            <!-- Close Button: Allows user to close the reference -->\n            <v-btn\n              @click=\"removeReference(reference)\"\n              icon=\"mdi-close\"\n              color=\"error\"\n              size=\"small\"\n              variant=\"text\"\n              aria-label=\"Затворете направлението\"\n              v-tooltip:bottom=\"{\n                text: 'Затворете направлението',\n                openDelay: 700,\n              }\"\n            ></v-btn>\n          </v-card-title>\n\n          <!-- Divider between Header and Card Body -->\n          <v-divider></v-divider>\n\n          <!-- Card Body: Content Section for each reference -->\n          <v-card-text class=\"px-4 py-2\">\n            <!-- Patient Information Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Patient Icon -->\n                  <v-icon icon=\"mdi-account-outline\" size=\"small\"></v-icon>\n\n                  <!-- Patient's Name -->\n                  <b>{{ reference.patientName }}</b>\n\n                  <!-- Patient's PID (Personal Identification Number) -->\n                  <div>{{ reference.patientPid }}</div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Date Information Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Date Icon -->\n                  <v-icon\n                    icon=\"mdi-calendar-month-outline\"\n                    size=\"small\"\n                  ></v-icon>\n\n                  <!-- Issued Date -->\n                  <div>\n                    Изд. <b>{{ formatIssuedDate(reference.issuedDate) }}</b>\n                  </div>\n\n                  <!-- Reference List -->\n                  <div>\n                    (Амб. л-т\n                    <b>{{ reference.referenceId }}</b>\n                    )\n                  </div>\n\n                  <!-- Reference Type -->\n                  <div>\n                    вид <b>{{ reference.referenceType }}</b>\n                  </div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Location Information Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Location Icon -->\n                  <v-icon icon=\"mdi-map-marker-outline\" size=\"small\"></v-icon>\n\n                  <!-- Primary Location and Code -->\n                  <div>\n                    {{ reference.primaryLocation }}\n                    (\n                    <b>{{ reference.primaryLocationCode }}</b>\n                    )\n                  </div>\n\n                  <!-- Secondary Location and Code -->\n                  <div>\n                    {{ reference.secondaryLocation }}\n                    (\n                    <b>{{ reference.secondaryLocationCode }}</b>\n                    )\n                  </div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Condition Information Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Condition Icon -->\n                  <v-icon\n                    icon=\"mdi-clipboard-pulse-outline\"\n                    size=\"small\"\n                  ></v-icon>\n\n                  <!-- Patient's Condition -->\n                  <div>{{ reference.patientStateCode }}</div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Doctor Information Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Doctor Icon -->\n                  <v-icon icon=\"mdi-doctor\" size=\"small\"></v-icon>\n\n                  <!-- Referring Doctor's Name -->\n                  <b>{{ reference.referringDoctor }}</b>\n\n                  <!-- Doctor's Identifier -->\n                  <div>\n                    УИН: <b>{{ reference.doctorId }}</b>\n                  </div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Doctor's Specialty Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Specialty Icon -->\n                  <v-icon icon=\"mdi-stethoscope\" size=\"small\"></v-icon>\n\n                  <!-- Doctor's Specialty Information -->\n                  <div>\n                    <b>{{ reference.conditionCode }}</b> ({{\n                      reference.conditionDescription\n                    }})\n                  </div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Doctor's Practise Location Section -->\n            <v-hover>\n              <template #default=\"{ isHovering, props }\">\n                <div\n                  v-bind=\"props\"\n                  class=\"d-flex flex-wrap align-center ga-2 rounded pa-2\"\n                  :class=\"{ 'bg-grey-lighten-5': isHovering }\"\n                >\n                  <!-- Practise Location Icon -->\n                  <v-icon icon=\"mdi-hospital-building\" size=\"small\"></v-icon>\n\n                  <!-- Regional Health Code -->\n                  <div>\n                    РЗИ код: <b>{{ reference.regionalHealthCode }}</b>\n                  </div>\n                </div>\n              </template>\n            </v-hover>\n\n            <!-- Examination Table Section -->\n            <v-data-table\n              :headers=\"examinationTableHeaders\"\n              :items=\"examinationTableItems\"\n              :mobile=\"smAndDown\"\n              :disable-sort=\"true\"\n              :hide-default-header=\"smAndDown\"\n              hide-default-footer\n              density=\"compact\"\n              class=\"bg-white w-100 border my-2 rounded\"\n            >\n              <!-- Table Headers -->\n              <template\n                v-for=\"header in examinationTableHeaders\"\n                #[`header.${header.key}`]\n                :key=\"header.key\"\n              >\n                <div\n                  class=\"d-flex align-center font-weight-bold\"\n                  style=\"text-wrap-mode: nowrap\"\n                >\n                  <span>{{ header.title }}</span>\n                </div>\n              </template>\n\n              <!-- Table Body -->\n              <!-- Displaying Examination Code -->\n              <template v-slot:[`item.code`]=\"{ item }\">\n                <div\n                  class=\"d-flex align-center ga-0\"\n                  :class=\"smAndDown ? 'justify-end' : 'justify-start'\"\n                >\n                  <span>{{ item.code }}</span>\n                </div>\n              </template>\n\n              <!-- Displaying Examination Name -->\n              <template v-slot:[`item.examinationName`]=\"{ item }\">\n                <div\n                  class=\"d-flex align-center ga-0\"\n                  :class=\"smAndDown ? 'justify-end' : 'justify-start'\"\n                >\n                  <span>{{ item.examinationName }}</span>\n                </div>\n              </template>\n            </v-data-table>\n\n            <!-- Performer Select Dropdown -->\n            <v-select\n              :item-props=\"performerSelectProps\"\n              :items=\"performerSelectItems\"\n              item-value=\"name\"\n              item-text=\"name\"\n              v-model=\"reference.executorName\"\n              prepend-inner-icon=\"mdi-hospital-box-outline\"\n              label=\"Изпълнител на направлението\"\n              control-variant=\"hidden\"\n              variant=\"outlined\"\n              placeholder=\"Изпълнител на направлението\"\n              density=\"compact\"\n              :hide-details=\"true\"\n              rounded=\"lg\"\n              class=\"mt-4\"\n            ></v-select>\n\n            <!-- Sample Date Input -->\n            <v-date-input\n              v-model=\"reference.materialCollectionDate\"\n              prepend-icon=\"\"\n              prepend-inner-icon=\"mdi-test-tube\"\n              label=\"Дата на материал\"\n              variant=\"outlined\"\n              density=\"compact\"\n              rounded=\"lg\"\n              :hide-details=\"true\"\n              class=\"mt-4\"\n            ></v-date-input>\n\n            <!-- Result Date Input -->\n            <v-date-input\n              v-model=\"reference.resultDate\"\n              prepend-icon=\"\"\n              prepend-inner-icon=\"mdi-file-document-arrow-right-outline\"\n              label=\"Дата на резултат\"\n              variant=\"outlined\"\n              density=\"compact\"\n              rounded=\"lg\"\n              :hide-details=\"true\"\n              class=\"mt-4\"\n            ></v-date-input>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<style>\n.v-menu > .v-overlay__content > .v-list,\n.v-menu > .v-overlay__content > .v-sheet {\n  background: white !important;\n}\n</style>\n"],"names":["mockReferences","id","hph","patientName","patientPid","issuedDate","referenceId","referenceType","primaryLocation","primaryLocationCode","secondaryLocation","secondaryLocationCode","patientStateCode","referringDoctor","doctorId","conditionCode","conditionDescription","regionalHealthCode","executorName","materialCollectionDate","resultDate","smAndDown","useDisplay","form","reactive","pid","location","saleSchema","identifierType","ref","formRef","isLoading","references","selectedReferences","locationItems","saleSchemaItems","performerSelectItems","name","department","examinationTableHeaders","key","title","align","examinationTableItems","code","examinationName","hasSelectedReferences","computed","value","length","counter","_a","toString","pidValidationRule","test","hphValidationRule","formatIssuedDate","dateString","date","Date","getDate","padStart","getMonth","getFullYear","clearAllReferences","handleSubmit","async","_b","Promise","resolve","setTimeout","fetchMockReferences","console","log","performerSelectProps","performer","subtitle","onMounted","useHead","htmlAttrs","lang","meta","content","text","navigator","clipboard","writeText","then","catch","error","alert","reference","filter"],"mappings":"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"}