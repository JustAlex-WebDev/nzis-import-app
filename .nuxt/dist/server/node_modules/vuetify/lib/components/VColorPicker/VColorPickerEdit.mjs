import{computed as e,createVNode as o}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";/* empty css                     */import{makeComponentProps as t}from"../../composables/component.mjs";import{modes as l,nullColor as r}from"./util/index.mjs";import{VBtn as n}from"../VBtn/VBtn.mjs";import{defineComponent as a}from"../../util/defineComponent.mjs";import{propsFactory as i}from"../../util/propsFactory.mjs";import{useRender as s}from"../../util/useRender.mjs";const m=e=>{let{label:t,...l}=e;return o("div",{class:"v-color-picker-edit__input"},[o("input",l,null),o("span",null,[t])])},u=i({color:Object,disabled:Boolean,mode:{type:String,default:"rgba",validator:e=>Object.keys(l).includes(e)},modes:{type:Array,default:()=>Object.keys(l),validator:e=>Array.isArray(e)&&e.every((e=>Object.keys(l).includes(e)))},...t()},"VColorPickerEdit"),d=a({name:"VColorPickerEdit",props:u(),emits:{"update:color":e=>!0,"update:mode":e=>!0},setup(t,a){let{emit:i}=a;const u=e((()=>t.modes.map((e=>({...l[e],name:e}))))),d=e((()=>{var e;const o=u.value.find((e=>e.name===t.mode));if(!o)return[];const l=t.color?o.to(t.color):null;return null==(e=o.inputs)?void 0:e.map((e=>{let{getValue:n,getColor:a,...s}=e;return{...o.inputProps,...s,disabled:t.disabled,value:l&&n(l),onChange:e=>{const t=e.target;t&&i("update:color",o.from(a(l??o.to(r),t.value)))}}}))}));return s((()=>{var e;return o("div",{class:["v-color-picker-edit",t.class],style:t.style},[null==(e=d.value)?void 0:e.map((e=>o(m,e,null))),u.value.length>1&&o(n,{icon:"$unfold",size:"x-small",variant:"plain",onClick:()=>{const e=u.value.findIndex((e=>e.name===t.mode));i("update:mode",u.value[(e+1)%u.value.length].name)}},null)])})),{}}});export{d as VColorPickerEdit,u as makeVColorPickerEditProps};
