import{useId as e,computed as o,createVNode as s,mergeProps as l}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";/* empty css              */import{makeVCheckboxBtnProps as r,VCheckboxBtn as t}from"./VCheckboxBtn.mjs";import{makeVInputProps as m,VInput as u}from"../VInput/VInput.mjs";import{useFocus as a}from"../../composables/focus.mjs";import{useProxiedModel as i}from"../../composables/proxiedModel.mjs";import{genericComponent as d}from"../../util/defineComponent.mjs";import{propsFactory as p}from"../../util/propsFactory.mjs";import{useRender as n}from"../../util/useRender.mjs";import{omit as c,filterInputAttrs as f}from"../../util/helpers.mjs";const v=p({...m(),...c(r(),["inline"])},"VCheckbox"),b=d()({name:"VCheckbox",inheritAttrs:!1,props:v(),emits:{"update:modelValue":e=>!0,"update:focused":e=>!0},setup(r,m){let{attrs:d,slots:p}=m;const c=i(r,"modelValue"),{isFocused:v,focus:b,blur:V}=a(r),j=e(),x=o((()=>r.id||`checkbox-${j}`));return n((()=>{const[e,o]=f(d),m=u.filterProps(r),a=t.filterProps(r);return s(u,l({class:["v-checkbox",r.class]},e,m,{modelValue:c.value,"onUpdate:modelValue":e=>c.value=e,id:x.value,focused:v.value,style:r.style}),{...p,default:e=>{let{id:r,messagesId:m,isDisabled:u,isReadonly:i,isValid:d}=e;return s(t,l(a,{id:r.value,"aria-describedby":m.value,disabled:u.value,readonly:i.value},o,{error:!1===d.value,modelValue:c.value,"onUpdate:modelValue":e=>c.value=e,onFocus:b,onBlur:V}),p)}})})),{}}});export{b as VCheckbox,v as makeVCheckboxProps};
