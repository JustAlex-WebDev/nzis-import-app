import{inject as e,computed as o,createVNode as t,mergeProps as r}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";import{VStepperSymbol as s}from"./shared.mjs";import{makeVWindowProps as l,VWindow as m}from"../VWindow/VWindow.mjs";import{useProxiedModel as n}from"../../composables/proxiedModel.mjs";import{genericComponent as u}from"../../util/defineComponent.mjs";import{propsFactory as p}from"../../util/propsFactory.mjs";import{useRender as i}from"../../util/useRender.mjs";import{omit as a}from"../../util/helpers.mjs";const d=p({...a(l(),["continuous","nextIcon","prevIcon","showArrows","touch","mandatory"])},"VStepperWindow"),c=u()({name:"VStepperWindow",props:d(),emits:{"update:modelValue":e=>!0},setup(l,u){let{slots:p}=u;const a=e(s,null),d=n(l,"modelValue"),c=o({get(){var e;return null==d.value&&a?null==(e=a.items.value.find((e=>a.selected.value.includes(e.id))))?void 0:e.value:d.value},set(e){d.value=e}});return i((()=>{const e=m.filterProps(l);return t(m,r({_as:"VStepperWindow"},e,{modelValue:c.value,"onUpdate:modelValue":e=>c.value=e,class:["v-stepper-window",l.class],style:l.style,mandatory:!1,touch:!1}),p)})),{}}});export{c as VStepperWindow,d as makeVStepperWindowProps};
