import{useProxiedModel as e}from"./proxiedModel.mjs";import{inject as a,computed as l,shallowRef as i,ref as s,watch as o,provide as t,toRef as r,markRaw as n}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";import{propsFactory as d}from"../util/propsFactory.mjs";import{consoleWarn as u}from"../util/console.mjs";const v=Symbol.for("vuetify:form"),f=d({disabled:Boolean,fastFail:Boolean,readonly:Boolean,modelValue:{type:Boolean,default:null},validateOn:{type:String,default:"input"}},"form");function m(a){const d=e(a,"modelValue"),f=l((()=>a.disabled)),m=l((()=>a.readonly)),p=i(!1),c=s([]),V=s([]);return o(c,(()=>{let e=0,a=0;const l=[];for(const i of c.value)!1===i.isValid?(a++,l.push({id:i.id,errorMessages:i.errorMessages})):!0===i.isValid&&e++;V.value=l,d.value=!(a>0)&&(e===c.value.length||null)}),{deep:!0,flush:"post"}),t(v,{register:e=>{let{id:a,vm:l,validate:i,reset:s,resetValidation:o}=e;c.value.some((e=>e.id===a))&&u(`Duplicate input name "${a}"`),c.value.push({id:a,validate:i,reset:s,resetValidation:o,vm:n(l),isValid:null,errorMessages:[]})},unregister:e=>{c.value=c.value.filter((a=>a.id!==e))},update:(e,a,l)=>{const i=c.value.find((a=>a.id===e));i&&(i.isValid=a,i.errorMessages=l)},isDisabled:f,isReadonly:m,isValidating:p,isValid:d,items:c,validateOn:r(a,"validateOn")}),{errors:V,isDisabled:f,isReadonly:m,isValidating:p,isValid:d,items:c,validate:async function(){const e=[];let l=!0;V.value=[],p.value=!0;for(const i of c.value){const s=await i.validate();if(s.length>0&&(l=!1,e.push({id:i.id,errorMessages:s})),!l&&a.fastFail)break}return V.value=e,p.value=!1,{valid:l,errors:V.value}},reset:function(){c.value.forEach((e=>e.reset()))},resetValidation:function(){c.value.forEach((e=>e.resetValidation()))}}}function p(e){const i=a(v,null);return{...i,isReadonly:l((()=>!!((null==e?void 0:e.readonly)??(null==i?void 0:i.isReadonly.value)))),isDisabled:l((()=>!!((null==e?void 0:e.disabled)??(null==i?void 0:i.isDisabled.value))))}}export{v as FormKey,m as createForm,f as makeFormProps,p as useForm};
