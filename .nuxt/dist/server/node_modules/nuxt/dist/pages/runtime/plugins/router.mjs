import{executeAsync as t}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/unctx/dist/index.mjs";import{shallowRef as e,shallowReactive as o,reactive as a,isReadonly as r}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";import{createMemoryHistory as n,createRouter as i,START_LOCATION as s}from"vue-router";import{createError as l}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/h3/dist/index.mjs";import{toArray as u}from"../utils.mjs";import{getRouteRules as d}from"../../../app/composables/manifest.mjs";import{defineNuxtPlugin as c,useRuntimeConfig as p}from"../../../app/nuxt.mjs";import{useError as m,showError as f,isNuxtError as v}from"../../../app/composables/error.mjs";import{navigateTo as h}from"../../../app/composables/router.mjs";import _,{handleHotUpdate as x}from"../../../../../../_virtual/virtual_nuxt__Users_alexandarvalov_Documents_GitHub_nzis-import-app_.nuxt_routes.mjs";import w from"../../../../../../_virtual/virtual_nuxt__Users_alexandarvalov_Documents_GitHub_nzis-import-app_.nuxt_router.options.mjs";import{globalMiddleware as g,namedMiddleware as y}from"../../../../../../_virtual/virtual_nuxt__Users_alexandarvalov_Documents_GitHub_nzis-import-app_.nuxt_middleware.mjs";const b=c({name:"nuxt:router",enforce:"pre",async setup(c){var b,C,j,H;let E,P,R=p().app.baseURL;const W=(null==(C=(b=w).history)?void 0:C.call(b,R))??n(R),M=w.routes?([E,P]=t((()=>w.routes(_))),E=await E,P(),E??_):_;let U;const k=i({...w,scrollBehavior:(t,e,o)=>{if(e!==s){if(w.scrollBehavior){if(k.options.scrollBehavior=w.scrollBehavior,"scrollRestoration"in(void 0).history){const t=k.beforeEach((()=>{t(),(void 0).history.scrollRestoration="manual"}))}return w.scrollBehavior(t,s,U||o)}}else U=o},history:W,routes:M});x(k,w.routes?w.routes:t=>t),c.vueApp.use(k);const B=e(k.currentRoute.value);k.afterEach(((t,e)=>{B.value=e})),Object.defineProperty(c.vueApp.config.globalProperties,"previousRoute",{get:()=>B.value});const z=c.ssrContext.url,D=e(k.currentRoute.value),G=()=>{D.value=k.currentRoute.value};c.hook("page:finish",G),k.afterEach(((t,e)=>{var o,a,r,n;(null==(a=null==(o=t.matched[0])?void 0:o.components)?void 0:a.default)===(null==(n=null==(r=e.matched[0])?void 0:r.components)?void 0:n.default)&&G()}));const O={};for(const t in D.value)Object.defineProperty(O,t,{get:()=>D.value[t],enumerable:!0});c._route=o(O),c._middleware||(c._middleware={global:[],named:{}}),m(),(null==(j=c.ssrContext)?void 0:j.islandContext)||k.afterEach((async(t,e,o)=>{delete c._processingMiddleware,o&&await c.callHook("page:loading:end"),4!==(null==o?void 0:o.type)&&t.redirectedFrom&&t.fullPath!==z&&await c.runWithContext((()=>h(t.fullPath||"/")))}));try{[E,P]=t((()=>k.push(z))),await E,P(),[E,P]=t((()=>k.isReady())),await E,P()}catch(F){[E,P]=t((()=>c.runWithContext((()=>f(F))))),await E,P()}const $=k.currentRoute.value;if(G(),null==(H=c.ssrContext)?void 0:H.islandContext)return{provide:{router:k}};const A=c.payload.state._layout;return k.beforeEach((async(t,e)=>{var o,n,i;if(await c.callHook("page:loading:start"),t.meta=a(t.meta),c.isHydrating&&A&&!r(t.meta.layout)&&(t.meta.layout=A),c._processingMiddleware=!0,!(null==(o=c.ssrContext)?void 0:o.islandContext)){const o=new Set([...g,...c._middleware.global]);for(const e of t.matched){const t=e.meta.middleware;if(t)for(const e of u(t))o.add(e)}{const e=await c.runWithContext((()=>d({path:t.path})));if(e.appMiddleware)for(const t in e.appMiddleware)e.appMiddleware[t]?o.add(t):o.delete(t)}for(const a of o){const o="string"==typeof a?c._middleware.named[a]||await(null==(i=(n=y)[a])?void 0:i.call(n).then((t=>t.default||t))):a;if(!o)throw new Error(`Unknown route middleware: '${a}'.`);try{const a=await c.runWithContext((()=>o(t,e)));if(!1===a||a instanceof Error){const t=a||l({statusCode:404,statusMessage:`Page Not Found: ${z}`});return await c.runWithContext((()=>f(t))),!1}if(!0===a)continue;if(!1===a)return a;if(a)return v(a)&&a.fatal&&await c.runWithContext((()=>f(a))),a}catch(s){const t=l(s);return t.fatal&&await c.runWithContext((()=>f(t))),t}}}})),k.onError((async()=>{delete c._processingMiddleware,await c.callHook("page:loading:end")})),k.afterEach((async(t,e)=>{0===t.matched.length&&await c.runWithContext((()=>f(l({statusCode:404,fatal:!1,statusMessage:`Page not found: ${t.fullPath}`,data:{path:t.fullPath}}))))})),c.hooks.hookOnce("app:created",(async()=>{try{"name"in $&&($.name=void 0),await k.replace({...$,force:!0}),k.options.scrollBehavior=w.scrollBehavior}catch(F){await c.runWithContext((()=>f(F)))}})),{provide:{router:k}}}});export{b as default};
