import{executeAsync as t}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/unctx/dist/index.mjs";import{createError as a,showError as e}from"../../app/composables/error.mjs";import{useNuxtApp as s}from"../../app/nuxt.mjs";import{defineNuxtRouteMiddleware as o,useRouter as r}from"../../app/composables/router.mjs";const m=o((async o=>{var m;let n,i;if(!(null==(m=o.meta)?void 0:m.validate))return;const u=s(),l=r(),p=([n,i]=t((()=>Promise.resolve(o.meta.validate(o)))),n=await n,i(),n);if(!0===p)return;const d=a({statusCode:p&&p.statusCode||404,statusMessage:p&&p.statusMessage||`Page Not Found: ${o.fullPath}`,data:{path:o.fullPath}}),f=l.beforeResolve((t=>{if(f(),t===o){const t=l.afterEach((async()=>{t(),await u.runWithContext((()=>e(d)))}));return!1}}))}));export{m as default};
