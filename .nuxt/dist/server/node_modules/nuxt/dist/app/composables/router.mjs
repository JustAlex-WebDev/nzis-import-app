import{hasInjectionContext as e,inject as t}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/vue/index.mjs";import{sanitizeStatusCode as o}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/h3/dist/index.mjs";import{hasProtocol as r,joinURL as n,withQuery as a,isScriptProtocol as s}from"/Users/alexandarvalov/Documents/GitHub/nzis-import-app/node_modules/ufo/dist/index.mjs";import{useNuxtApp as i,useRuntimeConfig as l}from"../nuxt.mjs";import{PageRouteSymbol as u}from"../components/injections.mjs";const p=()=>{var e;return null==(e=i())?void 0:e.$router},c=()=>e()?t(u,i()._route):i()._route;function d(e){return e}const h=/"/g,m=(e,t)=>{e||(e="/");const a="string"==typeof e?e:"path"in e?v(e):p().resolve(e).href,u=r(a,{acceptRelative:!0}),c=(null==t?void 0:t.external)||u;if(c){if(!(null==t?void 0:t.external))throw new Error("Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`.");const{protocol:e}=new URL(a,"http://localhost");if(e&&s(e))throw new Error(`Cannot navigate to a URL with '${e}' protocol.`)}const d=(()=>{try{if(i()._processingMiddleware)return!0}catch{return!1}return!1})(),m=p(),x=i();if(x.ssrContext){const r="string"==typeof e||c?a:m.resolve(e).fullPath||"/",s=c?a:n(l().app.baseURL,r),i=async function(e){await x.callHook("app:redirected");const r=s.replace(h,"%22"),n=f(s,u);return x.ssrContext._renderResponse={statusCode:o((null==t?void 0:t.redirectCode)||302,302),body:`<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=${r}"></head></html>`,headers:{location:n}},e};return!c&&d?(m.afterEach((e=>e.fullPath===r?i(!1):void 0)),e):i(!d&&void 0)}return c?(x._scope.stop(),(null==t?void 0:t.replace)?(void 0).replace(a):(void 0).href=a,d?!!x.isHydrating&&new Promise((()=>{})):Promise.resolve()):(null==t?void 0:t.replace)?m.replace(e):m.push(e)};function v(e){return a(e.path||"",e.query||{})+(e.hash||"")}function f(e,t=!1){const o=new URL(e,"http://localhost");return t?e.startsWith("//")?o.toString().replace(o.protocol,""):o.toString():o.pathname+o.search+o.hash}export{d as defineNuxtRouteMiddleware,f as encodeURL,m as navigateTo,v as resolveRouteObject,c as useRoute,p as useRouter};
